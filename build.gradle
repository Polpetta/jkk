/*
 * jkk
 * Copyright (C) 2019 - 2019 Davide Polonio <poloniodavide@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
}

group 'it.polpetta'
version '0.1'

apply {
    plugin("kotlin")
    plugin("application")
}

application {
    mainClassName = 'it.polpetta.Cli'
    applicationDefaultJvmArgs = ['--add-opens=java.base/java.lang=ALL-UNNAMED']
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.github.ajalt:clikt:2.3.0"
    implementation 'com.uchuhimo:konf:0.22.1'
    implementation 'dev.misfitlabs.kotlinguice4:kotlin-guice:1.4.1'
    implementation 'com.offbytwo.jenkins:jenkins-client:0.3.8'
    implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "org.assertj:assertj-core:3.15.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task standalone(type: Jar) {
    dependsOn configurations.runtimeClasspath
    archiveClassifier = 'standalone'
    from sourceSets.main.output
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes 'Implementation-Title': 'JKK: A git-like cli for Jenkins written in Kotlin',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': 'it.polpetta.Cli'
    }
}